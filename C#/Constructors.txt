----------------------------------Name the main types of constructors in C#.-------------------------------------------------------


In C#, constructors are special methods used to initialize objects of a class. There are several types of constructors:
1. Default Constructor

   - A constructor with no parameters.
   - It is automatically created if no constructor is defined.
   - Used to initialize default values.

class Example {
    public Example() {  
        Console.WriteLine("Default Constructor called");  
    }
}

2. Parameterized Constructor

    A constructor that accepts parameters to initialize an object with specific values.

class Example {
    public Example(string name) {  
        Console.WriteLine("Hello, " + name);  
    }
}

3. Copy Constructor

    A constructor that copies values from one object to another.

class Example {
    public string Name;
    
    public Example(string name) {  
        Name = name;
    }

    // Copy Constructor
    public Example(Example obj) {  
        Name = obj.Name;  
    }
}

4. Static Constructor

   - A constructor that initializes static data of a class.
   - It runs only once when the class is accessed for the first time.
   - It does not accept parameters and cannot be called manually.

class Example {
    static Example() {  
        Console.WriteLine("Static Constructor called");  
    }
}

5. Private Constructor

   - A constructor that is private, restricting object creation from outside the class.
   - Used for singleton patterns or utility classes.

class Example {
    private Example() {  
        Console.WriteLine("Private Constructor called");  
    }
}

6. Constructor Overloading

   - Multiple constructors with different parameters in the same class.

class Example {
    public Example() { }  // Default constructor
    public Example(int x) { }  // Parameterized constructor
}

Each constructor type serves a specific purpose in object initialization and class design in C#. ðŸš€